// -- DESCRIPTION --
// the order of the arguments is importent
// null is used for the default value
// default values are mentioned as arguments
// the last ones may be omitted if they are in the default state
// if an argument in default state is not the last one, then [null] must be used

@mixin display-flex ($row: row, $wrap: nowrap, $justify-content: flex-start, $align-items: stretch, $align-content: stretch) {
    display: flex;
    flex-flow: $row $wrap;
    justify-content: $justify-content;
    align-items: $align-items;
    align-content: $align-content;  
}

@mixin width-height ($width: inherit, $height: inherit) {
    width: $width;
    height: $height;
}

@mixin clearfix() {
    &::after {
      display: block;
      content: "";
      clear: both;
    }
  }

// add classes to a clickable element to fade it in
  @mixin fade-in() {
    @-webkit-keyframes fadeIn {
        to {
          opacity: 0;
        }
      }
      
      @keyframes fadeIn {
        to {
          opacity: 0;
        }
      }
      
      .fade-in {
          -webkit-animation: fadeIn 1s ease-in 1 forwards;
        animation: fadeIn 2s ease-in 1 forwards;
        opacity: 1;
      }
      
      .is-paused {
          -webkit-animation-play-state: paused;
        animation-play-state: paused;
      }
  }

  @mixin animateButton() {
  @keyframes button {
      0%   {background-color: $color_8;}
      100%  {background-color: $color_9;}        
  }
  &__button:hover {
      cursor: pointer;
      animation-name: button;
      animation-duration: 0.5s;
      background-color: $color_9;
      box-shadow:1px 1px 2px black, 0 0 25px $color_5, 0 0 5px $color_6;
  }
  &__button:hover:after {
      background-color: $color_8;
  }
  // pressed
  &__button:active {
      background-color: $color_6;
  }
  // unpressed
  &__button:active:after {
      background-color: $color_8;
  }
  }